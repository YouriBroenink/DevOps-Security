name: CI/CD

on: push

jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD2 }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            516909/student-app:latest
  test:
    name: Test
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD2 }}
      - name: test 
        run: |
          docker run -d -p 80:5000 516909/student-app:latest
          sleep 10s
          curl http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  scan:
    name: Scan
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD2 }}

      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.5.0
        with:
          command: cves
          image: 516909/student-app:latest
          #only-fixed: true
          only-severities: critical,high
          ignore-base: false
          ignore-unchanged: false
          write-comment: true
          github-token: ${{ secrets.NEW_GITHUB_TOKEN }} # to be able to write the comment
          exit-code: false #true
          exit-on: vulnerability

  deploy:
    name: Deploy
    needs: [ scan ]
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - run: |
              sudo kubectl delete deployment --all              
              sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
              sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force


name: Automated API tests using Postman CLI
needs: [ deploy ]

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/My Collection.json" --integration-id "181140-${{ github.run_id }}"
          # Lint your API using Postman CLI
          postman api lint e563a70d-820a-4621-a8a6-c62139b975a4 --integration-id 181140